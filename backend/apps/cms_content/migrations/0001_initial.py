# Generated by Django 5.0.7 on 2025-09-27 08:32

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0091_remove_revision_submitted_for_moderation'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnouncementPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('date', models.DateField(verbose_name='Announcement date')),
                ('intro', models.CharField(help_text='Brief introduction', max_length=250)),
                ('body', wagtail.fields.RichTextField(blank=True, help_text='Full announcement content')),
                ('is_urgent', models.BooleanField(default=False, help_text='Mark as urgent announcement')),
                ('show_on_homepage', models.BooleanField(default=True, help_text='Show this announcement on the homepage')),
                ('expires_at', models.DateTimeField(blank=True, help_text='When this announcement should stop being shown', null=True)),
            ],
            options={
                'verbose_name': 'Announcement',
                'ordering': ['-date'],
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='HelpPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('category', models.CharField(choices=[('getting_started', 'Getting Started'), ('booking', 'Booking Rooms'), ('account', 'Account Management'), ('troubleshooting', 'Troubleshooting'), ('faq', 'Frequently Asked Questions'), ('contact', 'Contact Support')], default='getting_started', help_text='Help category', max_length=20)),
                ('content', wagtail.fields.RichTextField(help_text='Help content')),
                ('video_url', models.URLField(blank=True, help_text='Optional tutorial video URL')),
                ('order', models.IntegerField(default=0, help_text='Order in category (lower numbers appear first)')),
            ],
            options={
                'verbose_name': 'Help Page',
                'ordering': ['category', 'order', 'title'],
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PolicyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('policy_type', models.CharField(choices=[('booking', 'Booking Policy'), ('usage', 'Room Usage Guidelines'), ('security', 'Security Policy'), ('general', 'General Guidelines'), ('terms', 'Terms of Service'), ('privacy', 'Privacy Policy')], default='general', help_text='Type of policy', max_length=20)),
                ('version', models.CharField(default='1.0', help_text='Policy version', max_length=10)),
                ('effective_date', models.DateField(help_text='When this policy becomes effective')),
                ('content', wagtail.fields.RichTextField(help_text='Policy content')),
            ],
            options={
                'verbose_name': 'Policy Page',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='QuickLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('url', models.URLField(help_text='URL or path')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('icon', models.CharField(blank=True, help_text='CSS icon class or emoji', max_length=50)),
                ('order', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Quick Link',
                'verbose_name_plural': 'Quick Links',
                'ordering': ['order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_title', models.CharField(default='ICPAC Booking System', max_length=255)),
                ('site_description', models.TextField(default='Professional meeting room booking system for ICPAC staff')),
                ('contact_email', models.EmailField(default='support@icpac.net', help_text='Contact email for support', max_length=254)),
                ('contact_phone', models.CharField(blank=True, help_text='Contact phone number', max_length=20)),
                ('office_hours', models.CharField(default='Monday - Friday, 8:00 AM - 5:00 PM EAT', help_text='Office hours information', max_length=255)),
                ('website_url', models.URLField(blank=True, help_text='Main ICPAC website URL')),
                ('allow_self_registration', models.BooleanField(default=True, help_text='Allow users to register themselves')),
                ('require_email_verification', models.BooleanField(default=True, help_text='Require email verification for new accounts')),
                ('max_advance_booking_days', models.IntegerField(default=30, help_text='Maximum days in advance users can book rooms')),
                ('default_booking_duration', models.IntegerField(default=2, help_text='Default booking duration in hours')),
                ('send_booking_confirmations', models.BooleanField(default=True, help_text='Send email confirmations for bookings')),
                ('send_reminder_notifications', models.BooleanField(default=True, help_text='Send reminder notifications before meetings')),
                ('reminder_hours_before', models.IntegerField(default=2, help_text='Hours before meeting to send reminder')),
            ],
            options={
                'verbose_name': 'Site Configuration',
                'verbose_name_plural': 'Site Configuration',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('hero_title', models.CharField(default='ICPAC Internal Booking System', help_text='Main hero title', max_length=255)),
                ('hero_subtitle', models.TextField(default='Streamline your conference room reservations, manage meeting schedules, and enhance team collaboration', help_text='Hero subtitle/description')),
                ('welcome_section_title', models.CharField(default='Welcome to ICPAC Booking System', help_text='Welcome section title', max_length=255)),
                ('welcome_content', wagtail.fields.RichTextField(default='<p>Please login to your account or create a new one to access the meeting room booking system.</p>', help_text='Welcome section content')),
                ('show_statistics', models.BooleanField(default=True, help_text='Show room statistics on homepage')),
                ('statistics_title', models.CharField(default='Room Analytics & Insights', help_text='Statistics section title', max_length=255)),
                ('hero_image', models.ForeignKey(blank=True, help_text='Hero background image', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
            options={
                'verbose_name': 'Home Page',
            },
            bases=('wagtailcore.page',),
        ),
    ]
